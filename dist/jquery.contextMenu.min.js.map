{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 4241f0bb945cd2e37431","webpack:///./src/js/classes/ContextMenuItemTypes.js","webpack:///./src/js/defaults/index.js","webpack:///./src/js/contextmenu.js","webpack:///./src/js/classes/ContextMenu.js","webpack:///./src/js/classes/ContextMenuOperations.js","webpack:///./src/js/classes/ContextMenuHelper.js","webpack:///./src/js/defaults/position.js","webpack:///./src/js/classes/ContextMenuHtml5Builder.js","webpack:///./src/js/classes/ContextMenuEventHandler.js","webpack:///./src/js/jquery/contextMenuFunction.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","simple","text","textarea","checkbox","radio","select","html","separator","submenu","_position","selector","appendTo","trigger","autoHide","delay","reposition","hideOnSecondTrigger","selectableSubMenu","className","classNames","hover","disabled","visible","notSelectable","icon","iconEdit","iconCut","iconCopy","iconPaste","iconDelete","iconAdd","iconQuit","iconLoadingClass","zIndex","animation","duration","show","hide","events","$","noop","activated","callback","items","build","types","determinePosition","position","positionSubmenu","manager","_ContextMenu2","default","contextMenu","operation","options","execute","getInputValues","currentMenuData","data","setInputValues","fromMenu","element","html5builder","defaults","handle","handler","operations","menus","namespaces","fn","_contextMenuFunction2","ContextMenu","ContextMenuItemTypes","_classCallCheck","_ContextMenuHtml5Builder2","_defaults2","_ContextMenuEventHandler2","_ContextMenuOperations2","initialized","counter","normalizedArguments","normalizeArguments","update","create","destroy","html5","Error","buildOptions","document","body","window","each","id","css","_this","$visibleMenu","_hasContext","context","keys","forEach","ns","is","filter","length","contextMenuRoot","$trigger","find","force","$menu","remove","off","$currentTrigger","match","isEmptyObject","itemClick","itemClickEvent","contextMenuItemObj","contextmenu:focus.contextMenu","focusItem","contextmenu:blur.contextMenu","blurItem","contextmenu.contextMenu","abortevent","mouseenter.contextMenu","itemMouseenter","mouseleave.contextMenu","itemMouseleave","on","contextmenu:hide.contextMenu","hideMenu","prevcommand.contextMenu","prevItem","nextcommand.contextMenu","nextItem","menuMouseenter","menuMouseleave","inputClick","contextmenu","mouseenter","mouseleave","click","_this2","menu","userOptions","extend","first","contextMenuData","inputs","key","item","type","value","selected","$input","val","prop","ContextMenuOperations","e","menuData","x","y","additionalZValue","_ContextMenuHelper2","zindex","layer","addClass","pos","offset","right","left","outerWidth","bottom","top","outerHeight","$layer","hovering","pageX","pageY","setTimeout","_typeof","removeData","removeClass","$selected","undefined","rootMenuData","createNameNode","$name","_accesskey","_beforeAccesskey","append","createTextNode","_afterAccesskey","isHtmlName","accesskey","k","accesskeys","$t","$label","_ContextMenuItemTypes2","$node","contextMenuKey","ak","aks","splitAccesskey","matched","RegExp","commands","callbacks","hasTypes","attr","height","prependTo","then","processPromises","focusInput","blurInput","_icon","substring","support","eventSelectstart","nested","domMenu","display","getBoundingClientRect","Math","ceil","width","minWidth","maxWidth","index","resize","addBack","hasVisibleItems","children","$item","$window","z-index","opacity","background-color","insertBefore","layerClick","style","promise","finishPromiseProcess","errorPromise","errorItem","error","console","log","bind","$menuOffset","winHeight","winScrollTop","scrollTop","menuHeight","overflow-x","overflow-y","ContextMenuHelper","zin","$tt","max","parseInt","parent","indexOf","toLowerCase","t","split","charAt","toUpperCase","push","ui","my","at","of","collision","offsetParentOffset","offsetParent","scrollLeft","ContextMenuHtml5Builder","node","$this","$children","builder","nodeName","label","inputLabel","clone","_defaults","ContextMenuEventHandler","hoveract","preventDefault","stopImmediatePropagation","currentTarget","originalEvent","mouseButton","hasClass","built","Event","button","$related","relatedTarget","$document","closest","mousemove","timer","clearTimeout","fakeClick","target","triggerAction","elementFromPoint","isContentEditable","range","createRange","sel","getSelection","selectNode","collapse","removeAllRanges","addRange","one","isInput","stopPropagation","targetZIndex","getZIndexOfTriggerTarget","parentElement","keyCode","keyStop","shiftKey","blur","$parent","itemdata","String","fromCharCode","$s","$prev","prev","last","$round","focus","$next","next","targetMenu","join","not","$o","isPlainObject"],"mappings":"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","file":"jquery.contextMenu.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ContextMenu\"] = factory();\n\telse\n\t\troot[\"ContextMenu\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4241f0bb945cd2e37431","/**\n * @class ContextMenuItem\n * @instance\n * @interface\n * @classdesc The items map contains the commands to list in the menu. Each command has a unique key identifying an item object. The value may either be an item (properties explained below), or a string (which will insert a separator, disregarding the string's content). It is also possible to define a seperator the same as an item, and use the `type`:`cm_separator` to define it.\n\n ```javascript\n var items = {\n  firstCommand: itemOptions,\n  separator1: \"-----\",\n  separator2: { \"type\": \"cm_separator\" },\n  command2: itemOptions,\n  submenu: {\n    type: \"submenu\"\n    submenuItem1: itemOptions,\n    submenuItem2: itemOptions,\n  }\n}\n ```\n\n Since 2.3 it is also possible to use a promise as item, so you can build submenu's based on a snynchronous promis.\n\n Check out the [demo using a promise](demo/async-promise.md) for an example how to use this. The example uses jQuery deferred, but any promise should do. Promised can only be used in combination with the [build option](docs#build).\n\n *\n * @property {ContextMenuItemTypes|string} type - Specifies the type of the command. See {@link ContextMenuItemTypes}.\n * @property {string} name - Specify the human readable name of the command in the menu. This is used as the label for the option.\n * @property {boolean} isHtmlName - Should this item be called with .html() instead of .text(). Cannot be used with the accesskey option in the same item.\n * @property {Object.<string,ContextMenuItem>} items Object containing the menu items for creating a submenu.\n * @property {string} className - Specifies additional classNames to add to the menu item. Seperate multiple classes by using spaces.\n * @property {ContextMenuItemCallback} callback - Specifies the callback to execute if the item is clicked.\n * @property {ContextMenuIconCallback|string} icon - Specifies the icon class to set for the item. When using a string icons must be defined in CSS with selectors like `.context-menu-item.context-menu-icon-edit`, where edit is the icon class specified. When using a callback you can return a class string to use that as the class on the item. You can also modify the element by using the $itemElement argument.\n * @property {ContextMenuItemCallback|boolean} disabled - Specifies if the command is disabled (`true`) or enabled (`false`). May be a callback returning a `boolean`.\n * @property {ContextMenuItemCallback|boolean} visible - Specifies if the command is visible (`true`) or hidden (`false`). May be a callback returning a `boolean`.\n * @property {string} accesskey - Character(s) to be used as accesskey.\n\n Considering `a b c` $.contextMenu will first try to use »a« as the accesskey, if already taken, it'll fall through to `b`. Words are reduced to the first character, so `hello world` is treated as `h w`.\n\n Note: Accesskeys are treated unique throughout one menu. This means an item in a sub-menu can't occupy the same accesskey as an item in the main menu.\n *\n * @property {?JQuery} $input - The input element if it was build for this item.\n * @property {Object<string, Function>} events - Events to register on a {@link ContextMenuItem}. The contents of the options object are passed as jQuery `e.data`.\n * @property {string} value - The value of the `<input>` element.\n * @property {boolean|string} selected - The selected option of a `select` element and the checked property for `checkbox` and `radio` {@link ContextMenuItemTypes}.\n * @property {string} radio - Specifies the group of the `radio` element.\n * @property {string} options - Specifies the options of the `select` element.\n * @property {Number} height - The height in pixels `<textarea>` element. If not specified, the height is defined by CSS.\n */\n\n/**\n * Possible ContextMenuItem types\n * @enum string\n */\nconst ContextMenuItemTypes = {\n    /**\n     * The command is a simple clickable item.\n     */\n    simple: '',\n\n    /**\n     * Makes the command an &lt;input&gt; of type text. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    text: 'text',\n\n    /**\n     * Makes the command a &lt;textarea&gt;. The name followed by the &lt;textarea&gt; are encapsulated in a &lt;label&gt;.\n     */\n    textarea: 'textarea',\n\n    /**\n     * Makes the command an &lt;input&gt; of type checkbox. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    checkbox: 'checkbox',\n\n    /**\n     * Makes the command an &lt;input&gt; of type radio. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    radio: 'radio',\n\n    /**\n     * Makes the command aa &lt;select&gt;. The name followed by the &lt;select&gt; are encapsulated in a &lt;label&gt;.\n     */\n    select: 'select',\n\n    /**\n     * Makes an non-command element. When you select `type: 'html'` add the html to the html property. So: `{ item: { type: 'html', html: '<span>html!</span>' } }`. You can also just use the item name with the `isHtmlName` property.\n     */\n    html: 'html',\n\n    /**\n     * Internal property, used internally when the type is set to a string.\n     */\n    separator: 'cm_separator',\n\n    /**\n     * Internal property for a {@link ContextMenuItem} that has an `items` property with other {@link ContextMenuItem} items.\n     */\n    submenu: 'sub'\n};\n\nexport default ContextMenuItemTypes;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuItemTypes.js","import {determinePosition, positionSubmenu, position} from './position';\n\n/**\n * @class ContextMenuData\n * @augments ContextMenuOptions\n * @instance\n * @interface\n *\n * @property {JQuery} $menu - The menu element for this menu part. Eg. the root menu, or a single submenu.\n * @property {JQuery} $layer - The opened layer when the menu is opened.\n * @property {JQuery} $node - The menu node.\n * @property {JQuery} $trigger - The element that triggered opening the menu.\n * @property {JQuery} $selected - Reference to the `<li>` command element.\n * @property {JQuery} $input - Reference to the `<input>` or `<select>` of the command element.\n * @property {JQuery} $label - Reference to the `<input>` or `<select>` of the command element.\n * @property {string} ns - The namespace (including leading dot) all events for this contextMenu instance were registered under.\n * @property {ContextMenu} manager - The contextmenu manager instance.\n * @property {JQuery|jQuery|null} $selected - Currently selected menu item, or input inside menu item.\n * @property {?boolean} hasTypes - The menu has ContextMenuItem which are of a selectable type.\n * @property {?boolean} isInput - We are currently originating events from an input.\n * @property {Object<string, ContextMenuItem>} inputs - Inputs defined in the menu.\n * @property {Object<string, ContextMenuItemTypeCallback>} types - Custom ContextMenuItemTypes, key is the {@link ContextMenuItem} type property, value is a {@link ContextMenuItemTypeCallback} callback.\n *\n * @property {boolean} hovering Currently hovering, root menu only.\n */\n\n/**\n * @class ContextMenuOptions\n * @instance\n * @interface\n * @classdesc\n ## Register new contextMenu\n\n To register a new contextMenu:\n\n ```javascript\n $.contextMenu( contextMenuOptions );\n ```\n\n ## Update contextMenu state\n\n It is possible to refresh the state of the contextmenu [disabled](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#disabled), [visibility](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#visible), [icons](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#icon) and [input values](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#type) through the `update` command. This will reevaluate any custom callbacks.\n\n ```javascript\n $('.context-menu-one').contextMenu('update'); // update single menu\n $.contextMenu('update') // update all open menus\n ```\n\n * @property {null|string} selector - Selector on which the contextMenu triggers.\n * @property {Object.<string, ContextMenuItem>} items - Object with items to be listed in contextMenu. See {@link ContextMenuItem} for a full documentation on how to build your menu items.\n * @property {JQuery.Selector|DOMElement} [appendTo=document.body] - Specifies the selector `string` or `DOMElement` the generated menu is to be appended to.\n * @property {('right'|'left'|'hover'|'touchstart'|'none')} trigger=left - Method to trigger context menu [\"right\", \"left\", \"hover\", \"touchstart\", \"none\"].\n * @property {?string} itemClickEvent - Allows the selection of the click event instead of the mouseup event to handle the user mouse interaction with the contexMenu. The default event is `mouseup`. Set the option to `\"click\"` to change to the `click` event.\n\n This option is global: the first contexMenu registered sets it. To change it afterwards all the contextMenu have to be unregistered with `$.contextMenu( 'destroy' );` before the change has effect again.\n\n * @property {boolean} hideOnSecondTrigger=false - Flag denoting if a second trigger should close the menu, as long as the trigger happened on one of the trigger-element's child nodes. This overrides the reposition option.\n * @property {boolean} selectableSubMenu=false - Ability to select ContextMenuItem containing a submenu.\n * @property {boolean} reposition=true - flag denoting if a second trigger should simply move (`true`) or rebuild (`false`) an open menu as long as the trigger happened on one of the trigger-element's child nodes\n * @property {number} delay=200 - ms to wait before showing a hover-triggered context menu.\n * @property {boolean} autoHide=true - Hide menu when mouse leaves trigger / menu elements.\n * @property {number|Function} zIndex=1 - offset to add to zIndex\n * @property {string} className - Class to be appended to the root menu.\n * @property {Object} classNames - Default classname configuration to be able avoid conflicts in frameworks.\n * @property {string} classNames.hover=context-menu-hover\n * @property {string} classNames.disabled=context-menu-disabled\n * @property {string} classNames.visible=context-menu-visible\n * @property {string} classNames.notSelectable=context-menu-not-selectable\n * @property {string} classNames.icon=context-menu-icon\n * @property {string} classNames.iconEdit=context-menu-icon-edit\n * @property {string} classNames.iconCut=context-menu-icon-cut\n * @property {string} classNames.iconCopy=context-menu-icon-copy\n * @property {string} classNames.iconPaste=context-menu-icon-paste\n * @property {string} classNames.iconDelete=context-menu-icon-delete\n * @property {string} classNames.iconAdd=context-menu-icon-add\n * @property {string} classNames.iconQuit=context-menu-icon-quit\n * @property {string} classNames.iconLoadingClass=context-menu-icon-loading\n * @property {Object} animation - Animation settings\n * @property {number} animation.duration=50\n * @property {string} animation.show='slideDown'\n * @property {string} animation.hide='slideUp'\n * @property {Object} events - Event callbacks. This is the trigger element, first argument is the event, and the second argumant {@link ContextMenuData}.\n * @property {Function} events.show - Called when contextmenu is shown.\n * @property {Function} events.hide - Called when contextmenu is hidden.\n * @property {Function} events.activated - Called when contextmenu is activated.\n * @property {ContextMenuItemCallback} callback - Global callback called then a {@link ContextMenuItem} is clicked.\n * @property {ContextMenuBuildCallback} build=false\n * @property {(position)} position - Callback to override the position of the context menu. The function is executed in the context of the trigger object.\n\n The first argument is a jQuery.Event. The second argument is the {@link ContextMenuData} object, which has a `$menu` property with the menu that needs to be positioned. The third and fourth arguments are `x` and `y` coordinates provided by the show event.\n\n The `x` and `y` may either be integers denoting the offset from the top left corner, undefined, or the string \"maintain\". If the string \"maintain\" is provided, the current position of the `$menu` must be used. If the coordinates are `undefined`, appropriate coordinates must be determined. An example of how this can be achieved is provided with {@link determinePosition}.\n\n * @property {(determinePosition)} determinePosition\n * @property {(positionSubmenu)} positionSubmenu - Callback tha positions a submenu\n * @property {boolean} _hasContext - Set to true if the call was done from an element.\n */\nexport default {\n    selector: null,\n\n    // where to append the menu to\n    appendTo: null,\n\n    // method to trigger context menu [\"right\", \"left\", \"hover\"]\n    trigger: 'right',\n\n    // hide menu when mouse leaves trigger / menu elements\n    autoHide: false,\n\n    // ms to wait before showing a hover-triggered context menu\n    delay: 200,\n\n    // flag denoting if a second trigger should simply move (true) or rebuild (false) an open menu\n    // as long as the trigger happened on one of the trigger-element's child nodes\n    reposition: true,\n\n    // Flag denoting if a second trigger should close the menu, as long as\n    // the trigger happened on one of the trigger-element's child nodes.\n    // This overrides the reposition option.\n    hideOnSecondTrigger: false,\n\n    // ability to select submenu\n    selectableSubMenu: false,\n\n    className: '',\n\n    // Default classname configuration to be able avoid conflicts in frameworks\n    classNames: {\n        hover: 'context-menu-hover', // Item hover\n        disabled: 'context-menu-disabled', // Item disabled\n        visible: 'context-menu-visible', // Item visible\n        notSelectable: 'context-menu-not-selectable', // Item not selectable\n\n        icon: 'context-menu-icon',\n        iconEdit: 'context-menu-icon-edit',\n        iconCut: 'context-menu-icon-cut',\n        iconCopy: 'context-menu-icon-copy',\n        iconPaste: 'context-menu-icon-paste',\n        iconDelete: 'context-menu-icon-delete',\n        iconAdd: 'context-menu-icon-add',\n        iconQuit: 'context-menu-icon-quit',\n        iconLoadingClass: 'context-menu-icon-loading'\n    },\n\n    // offset to add to zIndex\n    zIndex: 1,\n\n    // show hide animation settings\n    animation: {\n        duration: 50,\n        show: 'slideDown',\n        hide: 'slideUp'\n    },\n\n    // events\n    events: {\n        show: $.noop,\n        hide: $.noop,\n        activated: $.noop\n    },\n\n    // default callback\n    callback: null,\n\n    // list of contextMenu items\n    items: {},\n\n    // Build callback for creating a menu dynamicly\n    build: false,\n\n    types: {},\n\n    // determine position to show menu at\n    determinePosition,\n\n    // position menu\n    position,\n\n    // position the sub-menu\n    positionSubmenu\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/defaults/index.js","'use strict';\nimport '../sass/jquery.contextMenu.scss';\nimport ContextMenu from './classes/ContextMenu';\nimport ContextMenuItemTypes from './classes/ContextMenuItemTypes';\nimport elementFunction from './jquery/contextMenuFunction';\n\n/**\n * The jQuery namespace.\n * @external \"jQuery\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * @class jQuery.contextMenu\n * @function external:jQuery.contextMenu\n * @instance\n *\n * @param {string} operation\n * @param {ContextMenuOptions} options\n *\n * @property {ContextMenu} manager\n * @property {getInputValues} getInputValues\n * @property {setInputValues} setInputValues\n * @property {fromMenu} ContextMenuHtml5Builder#fromMenu\n * @property {ContextMenuOptions} defaults\n * @property {ContextMenuEventHandler} handle\n * @property {ContextMenuOperations} operations\n * @property {Object<string, ContextMenuData>} menus\n */\nconst manager = new ContextMenu();\n\n// manage contextMenu instances\nlet contextMenu = function (operation, options) {\n    manager.execute(operation, options);\n};\n\ncontextMenu.getInputValues = function (currentMenuData, data) {\n    return manager.getInputValues(currentMenuData, data);\n};\ncontextMenu.setInputValues = function (currentMenuData, data) {\n    return manager.getInputValues(currentMenuData, data);\n};\ncontextMenu.fromMenu = function (element) {\n    return manager.html5builder.fromMenu(element);\n};\n\n// make defaults accessible\ncontextMenu.defaults = manager.defaults;\ncontextMenu.types = manager.defaults.types;\ncontextMenu.manager = manager;\n\n// export internal functions - undocumented, for hacking only!\ncontextMenu.handle = manager.handler;\ncontextMenu.operations = manager.operations;\ncontextMenu.menus = manager.menus;\ncontextMenu.namespaces = manager.namespaces;\n\n$.fn.contextMenu = elementFunction;\n$.contextMenu = contextMenu;\n\nmodule.exports = {ContextMenu, ContextMenuItemTypes};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/contextmenu.js","import ContextMenuOperations from './ContextMenuOperations';\nimport defaults from '../defaults';\nimport ContextMenuHtml5Builder from './ContextMenuHtml5Builder';\nimport ContextMenuEventHandler from './ContextMenuEventHandler';\n\nexport default class ContextMenu {\n    /**\n     * @constructor\n     * @constructs ContextMenu\n     * @classdesc The ContextMenu is the core class that manages contextmenu's. You can call this class directly and skip going through jQuery.\n     * @class ContextMenu\n     *\n     * @example\n     * // You can call this class directly and skip going through jQuery, although it still requires jQuery to run.\n     * const manager = new ContextMenu();\n     * manager.execute(\"create\", options);\n     *\n     * @property {ContextMenuOptions|Object} defaults\n     * @property {ContextMenuEventHandler} handle\n     * @property {ContextMenuOperations} operations\n     * @property {Object<string, ContextMenuData>} menus\n     * @property {number} counter - Internal counter to keep track of different menu's on the page.\n     * @property {boolean} initialized - Flag the menu as initialized.\n     */\n    constructor() {\n        this.html5builder = new ContextMenuHtml5Builder();\n        this.defaults = defaults;\n        this.handler = new ContextMenuEventHandler();\n        this.operations = new ContextMenuOperations();\n        this.namespaces = {};\n        this.initialized = false;\n        this.menus = {};\n        this.counter = 0;\n    }\n\n    /**\n     * @method execute\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {(string|ContextMenuOptions)} operation\n     * @param {(string|ContextMenuOptions)} options\n     * @return {ContextMenu}\n     */\n    execute(operation, options) {\n        const normalizedArguments = this.normalizeArguments(operation, options);\n        operation = normalizedArguments.operation;\n        options = normalizedArguments.options;\n\n        switch (operation) {\n            case 'update':\n                // Updates visibility and such\n                this.update(options);\n                break;\n\n            case 'create':\n                // no selector no joy\n                this.create(options);\n                break;\n\n            case 'destroy':\n                this.destroy(options);\n                break;\n\n            case 'html5':\n                this.html5(options);\n                break;\n\n            default:\n                throw new Error('Unknown operation \"' + operation + '\"');\n        }\n\n        return this;\n    }\n\n    /**\n     * if <menuitem> is not handled by the browser, or options was a bool true, initialize $.contextMenu for them.\n     * @method html5\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions|boolean} options\n     */\n    html5(options) {\n        options = this.buildOptions(options);\n\n        const menuItemSupport = ('contextMenu' in document.body && 'HTMLMenuItemElement' in window);\n\n        if (!menuItemSupport || (typeof options === 'boolean' && options === true)) {\n            $('menu[type=\"context\"]').each(function () {\n                if (this.id) {\n                    $.contextMenu({\n                        selector: '[contextmenu=' + this.id + ']',\n                        items: $.contextMenu.fromMenu(this)\n                    });\n                }\n            }).css('display', 'none');\n        }\n    }\n\n    /**\n     * Destroy the ContextMenu\n     * @method destroy\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    destroy(options) {\n        options = this.buildOptions(options);\n\n        let $visibleMenu;\n        if (options._hasContext) {\n            // get proper options\n            const context = options.context;\n\n            Object.keys(this.menus).forEach((ns) => {\n                let o = this.menus[ns];\n\n                if (!o) {\n                    return true;\n                }\n\n                // Is this menu equest to the context called from\n                if (!$(context).is(o.selector)) {\n                    return true;\n                }\n\n                $visibleMenu = $('.context-menu-list').filter(':visible');\n                if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector))) {\n                    $visibleMenu.trigger('contextmenu:hide', {force: true});\n                }\n\n                if (this.menus[o.ns].$menu) {\n                    this.menus[o.ns].$menu.remove();\n                }\n                delete this.menus[o.ns];\n\n                $(o.context).off(o.ns);\n                return true;\n            });\n        } else if (!options.selector) {\n            $(document).off('.contextMenu .contextMenuAutoHide');\n\n            Object.keys(this.menus).forEach((ns) => {\n                let o = this.menus[ns];\n                $(o.context).off(o.ns);\n            });\n\n            this.namespaces = {};\n            this.menus = {};\n            this.counter = 0;\n            this.initialized = false;\n\n            $('#context-menu-layer, .context-menu-list').remove();\n        } else if (this.namespaces[options.selector]) {\n            $visibleMenu = $('.context-menu-list').filter(':visible');\n            if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is(options.selector)) {\n                $visibleMenu.trigger('contextmenu:hide', {force: true});\n            }\n\n            if (this.menus[this.namespaces[options.selector]].$menu) {\n                this.menus[this.namespaces[options.selector]].$menu.remove();\n            }\n            delete this.menus[this.namespaces[options.selector]];\n\n            $(document).off(this.namespaces[options.selector]);\n        }\n        this.handler.$currentTrigger = null;\n    }\n\n    /**\n     * Create a ContextMenu\n     * @method create\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    create(options) {\n        options = this.buildOptions(options);\n\n        if (!options.selector) {\n            throw new Error('No selector specified');\n        }\n        // make sure internal classes are not bound to\n        if (options.selector.match(/.context-menu-(list|item|input)($|\\s)/)) {\n            throw new Error('Cannot bind to selector \"' + options.selector + '\" as it contains a reserved className');\n        }\n        if (!options.build && (!options.items || $.isEmptyObject(options.items))) {\n            throw new Error('No Items specified');\n        }\n        this.counter++;\n        options.ns = '.contextMenu' + this.counter;\n        if (!options._hasContext) {\n            this.namespaces[options.selector] = options.ns;\n        }\n        this.menus[options.ns] = options;\n\n        // default to right click\n        if (!options.trigger) {\n            options.trigger = 'right';\n        }\n\n        if (!this.initialized) {\n            const itemClick = options.itemClickEvent === 'click' ? 'click.contextMenu' : 'mouseup.contextMenu';\n            const contextMenuItemObj = {\n                // 'mouseup.contextMenu': this.handler.itemClick,\n                // 'click.contextMenu': this.handler.itemClick,\n                'contextmenu:focus.contextMenu': this.handler.focusItem,\n                'contextmenu:blur.contextMenu': this.handler.blurItem,\n                'contextmenu.contextMenu': this.handler.abortevent,\n                'mouseenter.contextMenu': this.handler.itemMouseenter,\n                'mouseleave.contextMenu': this.handler.itemMouseleave\n            };\n            contextMenuItemObj[itemClick] = this.handler.itemClick;\n\n            // make sure item click is registered first\n            $(document)\n                .on({\n                    'contextmenu:hide.contextMenu': this.handler.hideMenu,\n                    'prevcommand.contextMenu': this.handler.prevItem,\n                    'nextcommand.contextMenu': this.handler.nextItem,\n                    'contextmenu.contextMenu': this.handler.abortevent,\n                    'mouseenter.contextMenu': this.handler.menuMouseenter,\n                    'mouseleave.contextMenu': this.handler.menuMouseleave\n                }, '.context-menu-list')\n                .on('mouseup.contextMenu', '.context-menu-input', this.handler.inputClick)\n                .on(contextMenuItemObj, '.context-menu-item');\n\n            this.initialized = true;\n        }\n\n        // engage native contextmenu event\n        options.context\n            .on('contextmenu' + options.ns, options.selector, options, this.handler.contextmenu);\n\n        switch (options.trigger) {\n            case 'hover':\n                options.context\n                    .on('mouseenter' + options.ns, options.selector, options, this.handler.mouseenter)\n                    .on('mouseleave' + options.ns, options.selector, options, this.handler.mouseleave);\n                break;\n\n            case 'left':\n                options.context.on('click' + options.ns, options.selector, options, this.handler.click);\n                break;\n            case 'touchstart':\n                options.context.on('touchstart' + options.ns, options.selector, options, this.handler.click);\n                break;\n            /*\n                     default:\n                     // http://www.quirksmode.org/dom/events/contextmenu.html\n                     $document\n                     .on('mousedown' + o.ns, o.selector, o, this.handler.mousedown)\n                     .on('mouseup' + o.ns, o.selector, o, this.handler.mouseup);\n                     break;\n                     */\n        }\n\n        // create menu\n        if (!options.build) {\n            this.operations.create(null, options);\n        }\n    }\n\n    /**\n     * Update the ContextMenu or all ContextMenu's\n     * @method update\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    update(options) {\n        options = this.buildOptions(options);\n\n        if (options._hasContext) {\n            this.operations.update(null, $(options.context).data('contextMenu'), $(options.context).data('contextMenuRoot'));\n        } else {\n            Object.keys(this.menus).forEach((menu) => {\n                this.operations.update(null, this.menus[menu]);\n            });\n        }\n    }\n\n    /**\n     * Build the options, by applying the Manager, defaults, user options and normalizing the context.\n     * @method buildOptions\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} userOptions\n     * @return {ContextMenuOptions}\n     */\n    buildOptions(userOptions) {\n        if (typeof userOptions === 'string') {\n            userOptions = {selector: userOptions};\n        }\n\n        const options = $.extend(true, {manager: this}, this.defaults, userOptions);\n\n        if (!options.context || !options.context.length) {\n            options.context = $(document);\n            options._hasContext = false;\n        } else {\n            // you never know what they throw at you...\n            options.context = $(options.context).first();\n            options._hasContext = !$(options.context).is($(document));\n        }\n        return options;\n    }\n\n    /**\n     * @method normalizeArguments\n     * @memberOf ContextMenu\n     *\n     * @param {string|Object} operation\n     * @param {string|Object|ContextMenuOptions} options\n     * @returns {{operation: string, options: ContextMenuOptions}}\n     */\n    normalizeArguments(operation, options) {\n        if (typeof operation !== 'string') {\n            options = operation;\n            operation = 'create';\n        }\n\n        if (typeof options === 'string') {\n            options = {selector: options};\n        } else if (typeof options === 'undefined') {\n            options = {};\n        }\n        return {operation, options};\n    }\n\n    /**\n     * import values into `<input>` commands\n     *\n     * @method setInputValues\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\n     * @param {Object} data - Values to set\n     * @return {undefined}\n     */\n    setInputValues(contextMenuData, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(contextMenuData.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                    item.value = data[key] || '';\n                    break;\n\n                case 'checkbox':\n                    item.selected = !!data[key];\n                    break;\n\n                case 'radio':\n                    item.selected = (data[item.radio] || '') === item.value;\n                    break;\n\n                case 'select':\n                    item.selected = data[key] || '';\n                    break;\n            }\n        });\n    }\n\n    /**\n     * export values from `<input>` commands\n     *\n     * @method getInputValues\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\n     * @param {Object} data - Values object\n     * @return {Object} - Values of input elements\n     */\n    getInputValues(contextMenuData, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(contextMenuData.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                case 'select':\n                    data[key] = item.$input.val();\n                    break;\n\n                case 'checkbox':\n                    data[key] = item.$input.prop('checked');\n                    break;\n\n                case 'radio':\n                    if (item.$input.prop('checked')) {\n                        data[item.radio] = item.value;\n                    }\n                    break;\n            }\n        });\n\n        return data;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenu.js","import ContextMenuHelper from './ContextMenuHelper';\nimport ContextMenuItemTypes from './ContextMenuItemTypes';\n\nexport default class ContextMenuOperations {\n    /**\n     * @constructor\n     * @constructs ContextMenuOperations\n     */\n    constructor() {\n        return this;\n    }\n\n    /**\n     * Show the menu.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {number} x\n     * @param {number} y\n     */\n    show(e, menuData, x, y) {\n        const $trigger = $(this);\n        const css = {};\n\n        // hide any open menus\n        $('#context-menu-layer').trigger('mousedown');\n\n        // backreference for callbacks\n        menuData.$trigger = $trigger;\n\n        // show event\n        if (menuData.events.show.call($trigger, e, menuData) === false) {\n            menuData.manager.handler.$currentTrigger = null;\n            return;\n        }\n\n        // create or update context menu\n        let hasVisibleItems = menuData.manager.operations.update.call($trigger, e, menuData);\n\n        if (hasVisibleItems === false) {\n            menuData.manager.handler.$currentTrigger = null;\n            return;\n        }\n        // position menu\n        menuData.position.call($trigger, e, menuData, x, y);\n\n        // make sure we're in front\n        if (menuData.zIndex) {\n            let additionalZValue = menuData.zIndex;\n            // If menuData.zIndex is a function, call the function to get the right zIndex.\n            if (typeof menuData.zIndex === 'function') {\n                additionalZValue = menuData.zIndex.call($trigger, menuData);\n            }\n            css.zIndex = ContextMenuHelper.zindex($trigger) + additionalZValue;\n        }\n\n        // add layer\n        menuData.manager.operations.layer.call(menuData.$menu, e, menuData, css.zIndex);\n\n        // adjust sub-menu zIndexes\n        menuData.$menu.find('ul').css('zIndex', css.zIndex + 1);\n\n        // position and show context menu\n        menuData.$menu.css(css)[menuData.animation.show](menuData.animation.duration, () => {\n            $trigger.trigger('contextmenu:visible');\n\n            menuData.manager.operations.activated(e, menuData);\n            menuData.events.activated($trigger, e, menuData);\n        });\n        // make options available and set state\n        $trigger\n            .data('contextMenu', menuData)\n            .addClass('context-menu-active');\n\n        // register key handler\n        $(document).off('keydown.contextMenu').on('keydown.contextMenu', menuData, menuData.manager.handler.key);\n        // register autoHide handler\n        if (menuData.autoHide) {\n            // mouse position handler\n            $(document).on('mousemove.contextMenuAutoHide', (e) => {\n                // need to capture the offset on mousemove,\n                // since the page might've been scrolled since activation\n                const pos = $trigger.offset();\n                pos.right = pos.left + $trigger.outerWidth();\n                pos.bottom = pos.top + $trigger.outerHeight();\n\n                if (menuData.$layer && !menuData.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {\n                    /* Additional hover check after short time, you might just miss the edge of the menu */\n                    setTimeout(() => {\n                        if (!menuData.hovering && menuData.$menu !== null && typeof menuData.$menu !== 'undefined') {\n                            menuData.$menu.trigger('contextmenu:hide');\n                        }\n                    }, 50);\n                }\n            });\n        }\n    }\n\n    /**\n     * Hide the menu.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {boolean} force\n     */\n    hide(e, menuData, force) {\n        const $trigger = $(this);\n        if (typeof menuData !== 'object' && $trigger.data('contextMenu')) {\n            menuData = $trigger.data('contextMenu');\n        } else if (typeof menuData !== 'object') {\n            return;\n        }\n\n        // hide event\n        if (!force && menuData.events && menuData.events.hide.call($trigger, e, menuData) === false) {\n            return;\n        }\n\n        // remove options and revert state\n        $trigger\n            .removeData('contextMenu')\n            .removeClass('context-menu-active');\n\n        if (menuData.$layer) {\n            // keep layer for a bit so the contextmenu event can be aborted properly by opera\n            setTimeout((function ($layer) {\n                return function () {\n                    $layer.remove();\n                };\n            })(menuData.$layer), 10);\n\n            try {\n                delete menuData.$layer;\n            } catch (e) {\n                menuData.$layer = null;\n            }\n        }\n\n        // remove handle\n        menuData.manager.handler.$currentTrigger = null;\n        // remove selected\n        menuData.$menu.find('.' + menuData.classNames.hover).trigger('contextmenu:blur');\n        menuData.$selected = null;\n        // collapse all submenus\n        menuData.$menu.find('.' + menuData.classNames.visible).removeClass(menuData.classNames.visible);\n        // unregister key and mouse handlers\n        $(document).off('.contextMenuAutoHide').off('keydown.contextMenu');\n        // hide menu\n        if (menuData.$menu) {\n            menuData.$menu[menuData.animation.hide](menuData.animation.duration, () => {\n                // tear down dynamically built menu after animation is completed.\n                if (menuData.build) {\n                    menuData.$menu.remove();\n                    Object.keys(menuData).forEach((key) => {\n                        switch (key) {\n                            case 'ns':\n                            case 'selector':\n                            case 'build':\n                            case 'trigger':\n                                return true;\n\n                            default:\n                                menuData[key] = undefined;\n                                try {\n                                    delete menuData[key];\n                                } catch (e) {\n                                }\n                                return true;\n                        }\n                    });\n                }\n\n                setTimeout(() => {\n                    $trigger.trigger('contextmenu:hidden');\n                }, 10);\n            });\n        }\n    }\n\n    /**\n     * Create a menu based on the options. Also created submenus.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} currentMenuData\n     * @param {ContextMenuData?} rootMenuData\n     */\n    create(e, currentMenuData, rootMenuData) {\n        if (typeof rootMenuData === 'undefined') {\n            rootMenuData = currentMenuData;\n        }\n\n        // create contextMenu\n        currentMenuData.$menu = $('<ul class=\"context-menu-list\"></ul>').addClass(currentMenuData.className || '').data({\n            'contextMenu': currentMenuData,\n            'contextMenuRoot': rootMenuData\n        });\n\n        ['callbacks', 'commands', 'inputs'].forEach((k) => {\n            currentMenuData[k] = {};\n            if (!rootMenuData[k]) {\n                rootMenuData[k] = {};\n            }\n        });\n\n        if (!rootMenuData.accesskeys) {\n            rootMenuData.accesskeys = {};\n        }\n\n        function createNameNode(item) {\n            const $name = $('<span></span>');\n            if (item._accesskey) {\n                if (item._beforeAccesskey) {\n                    $name.append(document.createTextNode(item._beforeAccesskey));\n                }\n                $('<span></span>')\n                    .addClass('context-menu-accesskey')\n                    .text(item._accesskey)\n                    .appendTo($name);\n                if (item._afterAccesskey) {\n                    $name.append(document.createTextNode(item._afterAccesskey));\n                }\n            } else {\n                if (item.isHtmlName) {\n                    // restrict use with access keys\n                    if (typeof item.accesskey !== 'undefined') {\n                        throw new Error('accesskeys are not compatible with HTML names and cannot be used together in the same item');\n                    }\n                    $name.html(item.name);\n                } else {\n                    $name.text(item.name);\n                }\n            }\n            return $name;\n        }\n\n        // create contextMenu items\n        Object.keys(currentMenuData.items).forEach((key) => {\n            let item = currentMenuData.items[key];\n            let $t = $('<li class=\"context-menu-item\"></li>').addClass(item.className || '');\n            let $label = null;\n            let $input = null;\n\n            // iOS needs to see a click-event bound to an element to actually\n            // have the TouchEvents infrastructure trigger the click event\n            $t.on('click', $.noop);\n\n            // Make old school string separator a real item so checks wont be\n            // awkward later.\n            // And normalize 'cm_separator' into 'cm_separator'.\n            if (typeof item === 'string' || item.type === 'cm_seperator') {\n                item = {type: ContextMenuItemTypes.separator};\n            }\n\n            item.$node = $t.data({\n                'contextMenu': currentMenuData,\n                'contextMenuRoot': rootMenuData,\n                'contextMenuKey': key\n            });\n\n            // register accesskey\n            // NOTE: the accesskey attribute should be applicable to any element, but Safari5 and Chrome13 still can't do that\n            if (typeof item.accesskey !== 'undefined') {\n                const aks = ContextMenuHelper.splitAccesskey(item.accesskey);\n                for (let i = 0, ak; ak = aks[i]; i++) {\n                    if (!rootMenuData.accesskeys[ak]) {\n                        rootMenuData.accesskeys[ak] = item;\n                        const matched = item.name.match(new RegExp('^(.*?)(' + ak + ')(.*)$', 'i'));\n                        if (matched) {\n                            item._beforeAccesskey = matched[1];\n                            item._accesskey = matched[2];\n                            item._afterAccesskey = matched[3];\n                        }\n                        break;\n                    }\n                }\n            }\n\n            if (item.type && rootMenuData.types[item.type]) {\n                // run custom type handler\n                rootMenuData.types[item.type].call($t, e, item, currentMenuData, rootMenuData);\n                // register commands\n                [currentMenuData, rootMenuData].forEach((k) => {\n                    k.commands[key] = item;\n                    // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\n                    // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\n                    if (typeof item.callback === 'function' && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\n                        k.callbacks[key] = item.callback;\n                    }\n                });\n            } else {\n                // add label for input\n                if (item.type === ContextMenuItemTypes.separator) {\n                    $t.addClass('context-menu-separator ' + rootMenuData.classNames.notSelectable);\n                } else if (item.type === ContextMenuItemTypes.html) {\n                    $t.addClass('context-menu-html ' + rootMenuData.classNames.notSelectable);\n                } else if (item.type && item.type !== ContextMenuItemTypes.submenu) {\n                    $label = $('<label></label>').appendTo($t);\n                    createNameNode(item).appendTo($label);\n\n                    $t.addClass('context-menu-input');\n                    currentMenuData.hasTypes = true;\n                    [currentMenuData, rootMenuData].forEach((k) => {\n                        k.commands[key] = item;\n                        k.inputs[key] = item;\n                    });\n                } else if (item.items) {\n                    item.type = ContextMenuItemTypes.submenu;\n                }\n\n                switch (item.type) {\n                    case ContextMenuItemTypes.separator:\n                        break;\n\n                    case ContextMenuItemTypes.text:\n                        $input = $('<input type=\"text\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.textarea:\n                        $input = $('<textarea name=\"\"></textarea>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n\n                        if (item.height) {\n                            $input.height(item.height);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.checkbox:\n                        $input = $('<input type=\"checkbox\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.radio:\n                        $input = $('<input type=\"radio\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + item.radio)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.select:\n                        $input = $('<select name=\"\"></select>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .appendTo($label);\n                        if (item.options) {\n                            Object.keys(item.options).forEach((value) => {\n                                $('<option></option>').val(value).text(item.options[value]).appendTo($input);\n                            });\n                            $input.val(item.selected);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.submenu:\n                        createNameNode(item).appendTo($t);\n                        item.appendTo = item.$node;\n                        $t.data('contextMenu', item).addClass('context-menu-submenu');\n                        item.callback = null;\n\n                        // If item contains items, and this is a promise, we should create it later\n                        // check if subitems is of type promise. If it is a promise we need to create\n                        // it later, after promise has been resolved.\n                        if (typeof item.items.then === 'function') {\n                            // probably a promise, process it, when completed it will create the sub menu's.\n                            rootMenuData.manager.operations.processPromises(e, item, rootMenuData, item.items);\n                        } else {\n                            // normal submenu.\n                            rootMenuData.manager.operations.create(e, item, rootMenuData);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.html:\n                        $(item.html).appendTo($t);\n                        break;\n\n                    default:\n                        [currentMenuData, rootMenuData].forEach((k) => {\n                            k.commands[key] = item;\n                            // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\n                            // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\n                            if (typeof item.callback === 'function' && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\n                                k.callbacks[key] = item.callback;\n                            }\n                        });\n                        createNameNode(item).appendTo($t);\n                        break;\n                }\n\n                // disable key listener in <input>\n                if (item.type && item.type !== ContextMenuItemTypes.submenu && item.type !== ContextMenuItemTypes.html && item.type !== ContextMenuItemTypes.separator) {\n                    $input\n                        .on('focus', rootMenuData.manager.handler.focusInput)\n                        .on('blur', rootMenuData.manager.handler.blurInput);\n\n                    if (item.events) {\n                        $input.on(item.events, currentMenuData);\n                    }\n                }\n\n                // add icons\n                if (item.icon) {\n                    if (typeof item.icon === 'function') {\n                        item._icon = item.icon.call(this, e, $t, key, item, currentMenuData, rootMenuData);\n                    } else {\n                        if (typeof item.icon === 'string' && item.icon.substring(0, 3) === 'fa-') {\n                            // to enable font awesome\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '--fa fa ' + item.icon;\n                        } else {\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '-' + item.icon;\n                        }\n                    }\n                    $t.addClass(item._icon);\n                }\n            }\n\n            // cache contained elements\n            item.$input = $input;\n            item.$label = $label;\n\n            // attach item to menu\n            $t.appendTo(currentMenuData.$menu);\n\n            // Disable text selection\n            if (!currentMenuData.hasTypes && $.support.eventSelectstart) {\n                // browsers support user-select: none,\n                // IE has a special event for text-selection\n                // browsers supporting neither will not be preventing text-selection\n                $t.on('selectstart.disableTextSelect', currentMenuData.manager.handler.abortevent);\n            }\n        });\n        // attach contextMenu to <body> (to bypass any possible overflow:hidden issues on parents of the trigger element)\n        if (!currentMenuData.$node) {\n            currentMenuData.$menu.css('display', 'none').addClass('context-menu-rootMenuData');\n        }\n        currentMenuData.$menu.appendTo(currentMenuData.appendTo || document.body);\n    }\n\n    /**\n     * Resize the menu to its content.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {ContextMenuEvent} e\n     * @param {JQuery} $menu\n     * @param {boolean?} nested\n     */\n    resize(e, $menu, nested) {\n        let domMenu;\n        // determine widths of submenus, as CSS won't grow them automatically\n        // position:absolute within position:absolute; min-width:100; max-width:200; results in width: 100;\n        // kinda sucks hard...\n\n        // determine width of absolutely positioned element\n        $menu.css({position: 'absolute', display: 'block'});\n        // don't apply yet, because that would break nested elements' widths\n        $menu.data('width',\n            (domMenu = $menu.get(0)).getBoundingClientRect\n                ? Math.ceil(domMenu.getBoundingClientRect().width)\n                : $menu.outerWidth() + 1); // outerWidth() returns rounded pixels\n        // reset styles so they allow nested elements to grow/shrink naturally\n        $menu.css({\n            position: 'static',\n            minWidth: '0px',\n            maxWidth: '100000px'\n        });\n        // identify width of nested menus\n        $menu.find('> li > ul').each((index, element) => {\n            e.data.manager.operations.resize(e, $(element), true);\n        });\n        // reset and apply changes in the end because nested\n        // elements' widths wouldn't be calculatable otherwise\n        if (!nested) {\n            $menu.find('ul').addBack().css({\n                position: '',\n                display: '',\n                minWidth: '',\n                maxWidth: ''\n            }).outerWidth(function () {\n                return $(this).data('width');\n            });\n        }\n    }\n\n    /**\n     * Update the contextmenu, re-evaluates the whole menu (including disabled/visible callbacks)\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData?} currentMenuData\n     * @param {ContextMenuData?} rootMenuData\n     *\n     * @return {boolean} hasVisibleItems\n     */\n    update(e, currentMenuData, rootMenuData) {\n        const $trigger = this;\n        if (typeof rootMenuData === 'undefined') {\n            rootMenuData = currentMenuData;\n            rootMenuData.manager.operations.resize(e, currentMenuData.$menu);\n        }\n\n        let hasVisibleItems = false;\n\n        // re-check disabled for each item\n        currentMenuData.$menu.children().each(function (index, element) {\n            let $item = $(element);\n            let key = $item.data('contextMenuKey');\n            let item = currentMenuData.items[key];\n\n            let disabled = (typeof item.disabled === 'function' && item.disabled.call($trigger, e, key, currentMenuData, rootMenuData)) || item.disabled === true;\n            let visible;\n\n            if (typeof item.visible === 'function') {\n                visible = item.visible.call($trigger, e, key, currentMenuData, rootMenuData);\n            } else if (typeof item.visible !== 'undefined') {\n                visible = item.visible === true;\n            } else {\n                visible = true;\n            }\n\n            if (visible) {\n                hasVisibleItems = true;\n            }\n\n            $item[visible ? 'show' : 'hide']();\n\n            // dis- / enable item\n            $item[disabled ? 'addClass' : 'removeClass'](rootMenuData.classNames.disabled);\n\n            if (typeof item.icon === 'function') {\n                $item.removeClass(item._icon);\n                item._icon = item.icon.call($trigger, e, $item, key, item, currentMenuData, rootMenuData);\n                $item.addClass(item._icon);\n            }\n\n            if (item.type) {\n                // dis- / enable input elements\n                $item.find('input, select, textarea').prop('disabled', disabled);\n\n                // update input states\n                switch (item.type) {\n                    case ContextMenuItemTypes.text:\n                    case ContextMenuItemTypes.textarea:\n                        item.$input.val(item.value || '');\n                        break;\n\n                    case ContextMenuItemTypes.checkbox:\n                    case ContextMenuItemTypes.radio:\n                        item.$input.val(item.value || '').prop('checked', !!item.selected);\n                        break;\n\n                    case ContextMenuItemTypes.select:\n                        item.$input.val((item.selected === 0 ? '0' : item.selected) || '');\n                        break;\n                }\n            }\n\n            if (item.$menu) {\n                // update sub-menu\n                let subMenuHasVisibleItems = rootMenuData.manager.operations.update.call($trigger, e, item, rootMenuData);\n                if (subMenuHasVisibleItems) {\n                    hasVisibleItems = true;\n                }\n            }\n        });\n\n        return hasVisibleItems;\n    }\n\n    /**\n     * Create the overlay layer so we can capture the click outside the menu and close it.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {number} zIndex\n     * @returns {jQuery}\n     */\n    layer(e, menuData, zIndex) {\n        const $window = $(window);\n\n        // add transparent layer for click area\n        // filter and background for Internet Explorer, Issue #23\n        const $layer = menuData.$layer = $('<div id=\"context-menu-layer\"></div>')\n            .css({\n                height: $window.height(),\n                width: $window.width(),\n                display: 'block',\n                position: 'fixed',\n                'z-index': zIndex,\n                top: 0,\n                left: 0,\n                opacity: 0,\n                filter: 'alpha(opacity=0)',\n                'background-color': '#000'\n            })\n            .data('contextMenuRoot', menuData)\n            .insertBefore(this)\n            .on('contextmenu', menuData.manager.handler.abortevent)\n            .on('mousedown', menuData.manager.handler.layerClick);\n\n        // IE6 doesn't know position:fixed;\n        if (typeof document.body.style.maxWidth === 'undefined') { // IE6 doesn't support maxWidth\n            $layer.css({\n                'position': 'absolute',\n                'height': $(document).height()\n            });\n        }\n\n        return $layer;\n    }\n\n    /**\n     * Process submenu promise.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} currentMenuData\n     * @param {ContextMenuData} rootMenuData\n     * @param {Promise} promise\n     */\n    processPromises(e, currentMenuData, rootMenuData, promise) {\n        // Start\n        currentMenuData.$node.addClass(rootMenuData.classNames.iconLoadingClass);\n\n        function finishPromiseProcess(currentMenuData, rootMenuData, items) {\n            if (typeof rootMenuData.$menu === 'undefined' || !rootMenuData.$menu.is(':visible')) {\n                return;\n            }\n            currentMenuData.$node.removeClass(rootMenuData.classNames.iconLoadingClass);\n            currentMenuData.items = items;\n            rootMenuData.manager.operations.create(e, currentMenuData, rootMenuData); // Create submenu\n            rootMenuData.manager.operations.update(e, currentMenuData, rootMenuData); // Correctly update position if user is already hovered over menu item\n            rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu); // positionSubmenu, will only do anything if user already hovered over menu item that just got new subitems.\n        }\n\n        function errorPromise(currentMenuData, rootMenuData, errorItem) {\n            // User called promise.reject() with an error item, if not, provide own error item.\n            if (typeof errorItem === 'undefined') {\n                errorItem = {\n                    'error': {\n                        name: 'No items and no error item',\n                        icon: 'context-menu-icon context-menu-icon-quit'\n                    }\n                };\n                if (window.console) {\n                    (console.error || console.log).call(console, 'When you reject a promise, provide an \"items\" object, equal to normal sub-menu items');\n                }\n            } else if (typeof errorItem === 'string') {\n                errorItem = {'error': {name: errorItem}};\n            }\n            finishPromiseProcess(currentMenuData, rootMenuData, errorItem);\n        }\n\n        function completedPromise(currentMenuData, rootMenuData, items) {\n            // Completed promise (dev called promise.resolve). We now have a list of items which can\n            // be used to create the rest of the context menu.\n            if (typeof items === 'undefined') {\n                // Null result, dev should have checked\n                errorPromise(undefined); // own error object\n            }\n            finishPromiseProcess(currentMenuData, rootMenuData, items);\n        }\n\n        // Wait for promise completion. .then(success, error, notify) (we don't track notify). Bind the currentMenuData\n        // and rootMenuData to avoid scope problems\n        promise.then(completedPromise.bind(this, currentMenuData, rootMenuData), errorPromise.bind(this, currentMenuData, rootMenuData));\n    }\n\n    /**\n     * Operation that will run after contextMenu showed on screen.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @return {undefined}\n     */\n    activated(e, menuData) {\n        const $menu = menuData.$menu;\n        const $menuOffset = $menu.offset();\n        const winHeight = $(window).height();\n        const winScrollTop = $(window).scrollTop();\n        const menuHeight = $menu.height();\n        if (menuHeight > winHeight) {\n            $menu.css({\n                'height': winHeight + 'px',\n                'overflow-x': 'hidden',\n                'overflow-y': 'auto',\n                'top': winScrollTop + 'px'\n            });\n        } else if (($menuOffset.top < winScrollTop) || ($menuOffset.top + menuHeight > winScrollTop + winHeight)) {\n            $menu.css({\n                'top': '0px'\n            });\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuOperations.js","/**\n * @class ContextMenuHelper\n * @classdesc Few helper static functions\n */\nexport default class ContextMenuHelper {\n    /**\n     * Calculates zIndex of an element\n     * @memberOf ContextMenuHelper\n     * @method zindex\n     * @static\n     * @param {JQuery} $t - Element to calculate z-index of.\n     * @return {number} - Elements zIndex\n     */\n    static zindex($t) {\n        let zin = 0;\n        let $tt = $t;\n\n        while (true) {\n            zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);\n            $tt = $tt.parent();\n            if (!$tt || !$tt.length || 'html body'.indexOf($tt.prop('nodeName').toLowerCase()) > -1) {\n                break;\n            }\n        }\n        return zin;\n    }\n\n    /**\n     * Split accesskey according to http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#assigned-access-key\n     * @memberOf ContextMenuHelper\n     * @method splitAccesskey\n     * @static\n     * @param {string} val - Accesskey value\n     * @return {Array} - Seperate keys to handle as accesskey\n     */\n    static splitAccesskey(val) {\n        let t = val.split(/\\s+/);\n        let keys = [];\n\n        for (let i = 0, k; k = t[i]; i++) {\n            k = k.charAt(0).toUpperCase(); // first character only\n            // theoretically non-accessible characters should be ignored, but different systems, different keyboard layouts, ... screw it.\n            // a map to look up already used access keys would be nice\n            keys.push(k);\n        }\n\n        return keys;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuHelper.js","/**\n * Determine the position for a root menu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#determinePosition\n * @param {(JQuery)} $menu\n */\nexport function determinePosition($menu) {\n    // position to the lower middle of the trigger element\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'center top',\n            at: 'center bottom',\n            of: this,\n            offset: '0 5',\n            collision: 'fit'\n        }).css('display', 'none');\n    } else {\n        // determine contextMenu position\n        const offset = this.offset();\n        offset.top += this.outerHeight();\n        offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;\n        $menu.css(offset);\n    }\n}\n\n/**\n * Position the root menu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#position\n * @param {JQuery.Event} e\n * @param {ContextMenuData} currentMenuData\n * @param {(number|string)} x\n * @param {(number|string)} y\n */\nexport function position(e, currentMenuData, x, y) {\n    const $window = $(window);\n    let offset;\n    // determine contextMenu position\n    if (!x && !y) {\n        currentMenuData.determinePosition.call(this, currentMenuData.$menu);\n        return;\n    } else if (x === 'maintain' && y === 'maintain') {\n        // x and y must not be changed (after re-show on command click)\n        offset = currentMenuData.$menu.position();\n    } else {\n        // x and y are given (by mouse event)\n        const offsetParentOffset = currentMenuData.$menu.offsetParent().offset();\n        offset = {top: y - offsetParentOffset.top, left: x - offsetParentOffset.left};\n    }\n\n    // correct offset if viewport demands it\n    const bottom = $window.scrollTop() + $window.height();\n    const right = $window.scrollLeft() + $window.width();\n    const height = currentMenuData.$menu.outerHeight();\n    const width = currentMenuData.$menu.outerWidth();\n\n    if (offset.top + height > bottom) {\n        offset.top -= height;\n    }\n\n    if (offset.top < 0) {\n        offset.top = 0;\n    }\n\n    if (offset.left + width > right) {\n        offset.left -= width;\n    }\n\n    if (offset.left < 0) {\n        offset.left = 0;\n    }\n\n    currentMenuData.$menu.css(offset);\n}\n\n/**\n * Position a submenu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#positionSubmenu\n * @param {JQuery.Event} e\n * @param {JQuery} $menu\n */\n// position the sub-menu\nexport function positionSubmenu(e, $menu) {\n    if (typeof $menu === 'undefined') {\n        // When user hovers over item (which has sub items) handle.focusItem will call this.\n        // but the submenu does not exist yet if ContextMenuData.items is a promise. just return, will\n        // call positionSubmenu after promise is completed.\n        return;\n    }\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'left top-5',\n            at: 'right top',\n            of: this,\n            collision: 'flipfit fit'\n        }).css('display', '');\n    } else {\n        // determine contextMenu position\n        const offset = {\n            top: -9,\n            left: this.outerWidth() - 5\n        };\n        $menu.css(offset);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/defaults/position.js","/**\n * @class ContextMenuHtml5Builder\n * @classdesc considering the following HTML `$.contextMenu.fromMenu($('#html5menu'))` will return a proper items object.\n\n ```\n <menu id=\"html5menu\" type=\"context\" style=\"display:none\">\n    <command label=\"rotate\" onclick=\"alert('rotate')\">\n    <command label=\"resize\" onclick=\"alert('resize')\">\n    <menu label=\"share\">\n        <command label=\"twitter\" onclick=\"alert('twitter')\">\n        <hr>\n        <command label=\"facebook\" onclick=\"alert('facebook')\">\n    </menu>\n </menu>\n ```\n\n `$.contextMenu.fromMenu()` will properly import (and thus handle) the following elements. Everything else is imported as `{type: \"html\"}`\n\n ```\n <menu>\n <hr>\n <a>\n <command type=\"command|radio|checkbox\"> (W3C Specification)\n <menuitem type=\"command|radio|checkbox\"> (Firefox)\n <input type=\"text|radio|checkbox\">\n <select>\n <textarea>\n <label for=\"someId\">\n <label> the text <input|textarea|select>\n ```\n\n The `<menu>` must be hidden but not removed, as all command events (clicks) are passed-thru to the original command element!\n\n Note: While the specs note `<option>`s to be renderd as regular commands, `$.contextMenu` will render an actual `<select>`.\n\n ## HTML5 `<menu>` shiv/polyfill\n\n Engaging the HTML5 polyfill (ignoring `$.contextMenu` if context menus are available natively):\n\n ```\n $(function(){\n    $.contextMenu(\"html5\");\n });\n ```\n\n Engaging the HTML5 polyfill (ignoring browser native implementation):\n\n ```\n $(function(){\n    $.contextMenu(\"html5\", true);\n });\n ```\n\n */\nexport default class ContextMenuHtml5Builder {\n    /**\n     * Get the input label for the given node.\n     *\n     * @method inputLabel\n     * @memberOf ContextMenuHtml5Builder\n     * @instance\n     *\n     * @param {HTMLElement} node - Html element\n     * @returns {string|JQuery|jQuery} - Input label element\n     */\n    inputLabel(node) {\n        return (node.id && $('label[for=\"' + node.id + '\"]').val()) || node.name;\n    }\n\n    /**\n     * Helper function to build ContextMenuItems from an html5 menu element.\n     *\n     * @method fromMenu\n     * @memberOf ContextMenuHtml5Builder\n     * @instance\n     *\n     * @param {JQuery|string} element - Menu element or selector to generate the menu from.\n     * @returns {Object.<string, ContextMenuItem>} - Collection of {@link ContextMenuItem}\n     */\n    fromMenu(element) {\n        const $this = $(element);\n        const items = {};\n\n        this.build(items, $this.children());\n\n        return items;\n    }\n\n    /**\n     * Helper function for building a menu from a HTML menu element.\n     *\n     * @method build\n     * @memberOf ContextMenuHtml5Builder\n     * @instance\n     *\n     * @param {Object.<string, ContextMenuItem>} items - {@link ContextMenuItem} object to build.\n     * @param {(JQuery)} $children - Collection of elements inside the `<menu>` element\n     * @param {number?} counter - Counter to generate {@link ContextMenuItem} key names.\n     * @returns {number} - Counter to generate {@link ContextMenuItem} key names.\n     */\n    build(items, $children, counter) {\n        if (!counter) {\n            counter = 0;\n        }\n\n        let builder = this;\n\n        $children.each(function () {\n            let $node = $(this);\n            let node = this;\n            let nodeName = this.nodeName.toLowerCase();\n            let label;\n            let item;\n\n            // extract <label><input>\n            if (nodeName === 'label' && $node.find('input, textarea, select').length) {\n                label = $node.text();\n                $node = $node.children().first();\n                node = $node.get(0);\n                nodeName = node.nodeName.toLowerCase();\n            }\n\n            /*\n             * <menu> accepts flow-content as children. that means <embed>, <canvas> and such are valid menu items.\n             * Not being the sadistic kind, $.contextMenu only accepts:\n             * <command>, <menuitem>, <hr>, <span>, <p> <input [text, radio, checkbox]>, <textarea>, <select> and of course <menu>.\n             * Everything else will be imported as an html node, which is not interfaced with contextMenu.\n             */\n\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#concept-command\n            switch (nodeName) {\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-menu-element\n                case 'menu':\n                    item = {name: $node.attr('label'), items: {}};\n                    counter = builder.build(item.items, $node.children(), counter);\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-a-element-to-define-a-command\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-button-element-to-define-a-command\n                case 'a':\n                case 'button':\n                    item = {\n                        name: $node.text(),\n                        disabled: !!$node.attr('disabled'),\n                        callback: (function () {\n                            return function () {\n                                $node.get(0).click();\n                            };\n                        })()\n                    };\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-command-element-to-define-a-command\n                case 'menuitem':\n                case 'command':\n                    switch ($node.attr('type')) {\n                        case undefined:\n                        case 'command':\n                        case 'menuitem':\n                            item = {\n                                name: $node.attr('label'),\n                                disabled: !!$node.attr('disabled'),\n                                icon: $node.attr('icon'),\n                                callback: (function () {\n                                    return function () {\n                                        $node.get(0).click();\n                                    };\n                                })()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                radio: $node.attr('radiogroup'),\n                                value: $node.attr('id'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                    }\n                    break;\n\n                case 'hr':\n                    item = '-------';\n                    break;\n\n                case 'input':\n                    switch ($node.attr('type')) {\n                        case 'text':\n                            item = {\n                                type: 'text',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                value: $node.val()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                radio: !!$node.attr('name'),\n                                value: $node.val(),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                            break;\n                    }\n                    break;\n\n                case 'select':\n                    item = {\n                        type: 'select',\n                        name: label || builder.inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        selected: $node.val(),\n                        options: {}\n                    };\n                    $node.children().each(function () {\n                        item.options[this.value] = $(this).text();\n                    });\n                    break;\n\n                case 'textarea':\n                    item = {\n                        type: 'textarea',\n                        name: label || builder.inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        value: $node.val()\n                    };\n                    break;\n\n                case 'label':\n                    break;\n\n                default:\n                    item = {type: 'html', html: $node.clone(true)};\n                    break;\n            }\n\n            if (item) {\n                counter++;\n                items['key' + counter] = item;\n            }\n        });\n\n        return counter;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuHtml5Builder.js","import defaults from '../defaults';\n\nexport default class ContextMenuEventHandler {\n    /**\n     * @constructs ContextMenuEventHandler\n     * @constructor\n     * @property {?JQuery} $currentTrigger\n     * @property {Object} hoveract\n     */\n    constructor() {\n        this.$currentTrigger = null;\n        this.hoveract = {};\n    }\n\n    /**\n     * Helper to abort an event\n     *\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    abortevent(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    contextmenu(e) {\n        const $this = $(e.currentTarget);\n\n        if (!e.data) {\n            throw new Error('No data attached');\n        }\n\n        // disable actual context-menu if we are using the right mouse button as the trigger\n        if (e.data.trigger === 'right') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // abort native-triggered events unless we're triggering on right click\n        if ((e.data.trigger !== 'right' && e.data.trigger !== 'demand') && e.originalEvent) {\n            return;\n        }\n\n        // Let the current contextmenu decide if it should show or not based on its own trigger settings\n        if (typeof e.mouseButton !== 'undefined') {\n            if (!(e.data.trigger === 'left' && e.mouseButton === 0) && !(e.data.trigger === 'right' && e.mouseButton === 2)) {\n                // Mouse click is not valid.\n                return;\n            }\n        }\n\n        // abort event if menu is visible for this trigger\n        if ($this.hasClass('context-menu-active')) {\n            return;\n        }\n\n        if (!$this.hasClass('context-menu-disabled')) {\n            // theoretically need to fire a show event at <menu>\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus\n            // var evt = jQuery.Event(\"show\", { data: data, pageX: e.pageX, pageY: e.pageY, relatedTarget: this });\n            // e.data.$menu.trigger(evt);\n\n            e.data.manager.handler.$currentTrigger = $this;\n            if (e.data.build) {\n                const built = e.data.build(e, $this);\n                // abort if build() returned false\n                if (built === false) {\n                    return;\n                }\n\n                // dynamically build menu on invocation\n                e.data = $.extend(true, {}, defaults, e.data, built || {});\n\n                // abort if there are no items to display\n                if (!e.data.items || $.isEmptyObject(e.data.items)) {\n                    // Note: jQuery captures and ignores errors from event handlers\n                    if (window.console) {\n                        (console.error || console.log).call(console, 'No items specified to show in contextMenu');\n                    }\n\n                    throw new Error('No Items specified');\n                }\n\n                // backreference for custom command type creation\n                e.data.$trigger = e.data.manager.handler.$currentTrigger;\n\n                e.data.manager.operations.create(e, e.data);\n            }\n            // show menu\n            e.data.manager.operations.show.call($this, e, e.data, e.pageX, e.pageY);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    click(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        $(this).trigger($.Event('contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY, originalEvent: e}));\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    mousedown(e) {\n        // register mouse down\n        const $this = $(this);\n\n        // hide any previous menus\n        if (e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length && !e.data.manager.handler.$currentTrigger.is($this)) {\n            e.data.manager.handler.$currentTrigger.data('contextMenu').$menu.trigger($.Event('contextmenu', {\n                data: e.data,\n                originalEvent: e\n            }));\n        }\n\n        // activate on right click\n        if (e.button === 2) {\n            e.data.manager.handler.$currentTrigger = $this.data('contextMenuActive', true);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    mouseup(e) {\n        // show menu\n        const $this = $(this);\n        if ($this.data('contextMenuActive') && e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length && e.data.manager.handler.$currentTrigger.is($this) && !$this.hasClass('context-menu-disabled')) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.data.manager.handler.$currentTrigger = $this;\n            $this.trigger($.Event('contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY, originalEvent: e}));\n        }\n\n        $this.removeData('contextMenuActive');\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    mouseenter(e) {\n        const $this = $(this);\n        const $related = $(e.relatedTarget);\n        const $document = $(document);\n\n        // abort if we're coming from a menu\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        // abort if a menu is shown\n        if (e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length) {\n            return;\n        }\n\n        e.data.manager.handler.hoveract.pageX = e.pageX;\n        e.data.manager.handler.hoveract.pageY = e.pageY;\n        e.data.manager.handler.hoveract.data = e.data;\n        $document.on('mousemove.contextMenuShow', e.data.manager.handler.mousemove);\n        e.data.manager.handler.hoveract.timer = setTimeout(() => {\n            e.data.manager.handler.hoveract.timer = null;\n            $document.off('mousemove.contextMenuShow');\n            e.data.manager.handler.$currentTrigger = $this;\n            $this.trigger($.Event('contextmenu', {\n                data: e.data.manager.handler.hoveract.data,\n                pageX: e.data.manager.handler.hoveract.pageX,\n                pageY: e.data.manager.handler.hoveract.pageY\n            }));\n        }, e.data.delay);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    mousemove(e) {\n        e.data.manager.handler.hoveract.pageX = e.pageX;\n        e.data.manager.handler.hoveract.pageY = e.pageY;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    mouseleave(e) {\n        // abort if we're leaving for a menu\n        const $related = $(e.relatedTarget);\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        try {\n            clearTimeout(e.data.manager.handler.hoveract.timer);\n        } catch (e) {\n\n        }\n\n        e.data.manager.handler.hoveract.timer = null;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    layerClick(e) {\n        let $this = $(this);\n        /** @var ContextMenuData **/\n        let root = $this.data('contextMenuRoot');\n\n        if (root === null || typeof root === 'undefined') {\n            throw new Error('No ContextMenuData found');\n        }\n\n        let button = e.button;\n        let x = e.pageX;\n        let y = e.pageY;\n        let fakeClick = x === undefined;\n        let target;\n        let offset;\n\n        e.preventDefault();\n\n        setTimeout(() => {\n            if (fakeClick) {\n                if (root.$menu !== null && typeof root.$menu !== 'undefined') {\n                    root.$menu.trigger('contextmenu:hide', {data: root, originalEvent: e});\n                }\n                return;\n            }\n\n            let $window = $(window);\n            let triggerAction = ((root.trigger === 'left' && button === 0) || (root.trigger === 'right' && button === 2));\n\n            // find the element that would've been clicked, wasn't the layer in the way\n            if (document.elementFromPoint && root.$layer) {\n                root.$layer.hide();\n                target = document.elementFromPoint(x - $window.scrollLeft(), y - $window.scrollTop());\n\n                // also need to try and focus this element if we're in a contenteditable area,\n                // as the layer will prevent the browser mouse action we want\n                if (target.isContentEditable) {\n                    const range = document.createRange();\n                    const sel = window.getSelection();\n                    range.selectNode(target);\n                    range.collapse(true);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n                $(target).trigger(e);\n                root.$layer.show();\n            }\n\n            if (root.hideOnSecondTrigger && triggerAction && root.$menu !== null && typeof root.$menu !== 'undefined') {\n                root.$menu.trigger('contextmenu:hide', {data: root, originalEvent: e});\n                return;\n            }\n\n            if (root.reposition && triggerAction) {\n                if (document.elementFromPoint) {\n                    if (root.$trigger.is(target)) {\n                        root.position.call(root.$trigger, e, root, x, y);\n                        return;\n                    }\n                } else {\n                    offset = root.$trigger.offset();\n                    const $window = $(window);\n                    // while this looks kinda awful, it's the best way to avoid\n                    // unnecessarily calculating any positions\n                    offset.top += $window.scrollTop();\n                    if (offset.top <= e.pageY) {\n                        offset.left += $window.scrollLeft();\n                        if (offset.left <= e.pageX) {\n                            offset.bottom = offset.top + root.$trigger.outerHeight();\n                            if (offset.bottom >= e.pageY) {\n                                offset.right = offset.left + root.$trigger.outerWidth();\n                                if (offset.right >= e.pageX) {\n                                    // reposition\n                                    root.position.call(root.$trigger, e, root, x, y);\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (target && triggerAction) {\n                root.$trigger.one('contextmenu:hidden', () => {\n                    $(target).contextMenu({x: x, y: y, button: button, originalEvent: e});\n                });\n            }\n\n            if (root.$menu !== null && typeof root.$menu !== 'undefined') {\n                root.$menu.trigger('contextmenu:hide', {data: root, originalEvent: e});\n            }\n        }, 50);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuItem} currentMenuData\n     */\n    keyStop(e, currentMenuData) {\n        if (!currentMenuData.isInput) {\n            e.preventDefault();\n        }\n\n        e.stopPropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    key(e) {\n        let rootMenuData = {};\n\n        // Only get the data from this.$currentTrigger if it exists\n        if (e.data.manager.handler.$currentTrigger) {\n            rootMenuData = e.data.manager.handler.$currentTrigger.data('contextMenu') || {};\n        }\n        // If the trigger happen on a element that are above the contextmenu do this\n        if (typeof rootMenuData.zIndex === 'undefined') {\n            rootMenuData.zIndex = 0;\n        }\n        const getZIndexOfTriggerTarget = (target) => {\n            if (target.style.zIndex !== '') {\n                return target.style.zIndex;\n            } else {\n                if (target.offsetParent !== null && typeof target.offsetParent !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.offsetParent);\n                } else if (target.parentElement !== null && typeof target.parentElement !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.parentElement);\n                }\n            }\n        };\n        let targetZIndex = getZIndexOfTriggerTarget(e.target);\n\n        // If targetZIndex is heigher then rootMenuData.zIndex dont progress any futher.\n        // This is used to make sure that if you are using a dialog with a input / textarea / contenteditable div\n        // and its above the contextmenu it wont steal keys events\n        if (rootMenuData.$menu && parseInt(targetZIndex, 10) > parseInt(rootMenuData.$menu.css('zIndex'), 10)) {\n            return;\n        }\n        switch (e.keyCode) {\n            case 9:\n            case 38: // up\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                // if keyCode is [38 (up)] or [9 (tab) with shift]\n                if (rootMenuData.isInput) {\n                    if (e.keyCode === 9 && e.shiftKey) {\n                        e.preventDefault();\n                        if (rootMenuData.$selected) {\n                            rootMenuData.$selected.find('input, textarea, select').blur();\n                        }\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                            rootMenuData.$menu.trigger('prevcommand', {data: rootMenuData, originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 38 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else if (e.keyCode !== 9 || e.shiftKey) {\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                        rootMenuData.$menu.trigger('prevcommand', {data: rootMenuData, originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n            // omitting break;\n            // case 9: // tab - reached through omitted break;\n            case 40: // down\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput) {\n                    if (e.keyCode === 9) {\n                        e.preventDefault();\n                        if (rootMenuData.$selected) {\n                            rootMenuData.$selected.find('input, textarea, select').blur();\n                        }\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                            rootMenuData.$menu.trigger('nextcommand', {data: rootMenuData, originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 40 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else {\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                        rootMenuData.$menu.trigger('nextcommand', {data: rootMenuData, originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n\n            case 37: // left\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\n                    break;\n                }\n\n                if (!rootMenuData.$selected.parent().hasClass('context-menu-root')) {\n                    const $parent = rootMenuData.$selected.parent().parent();\n                    rootMenuData.$selected.trigger('contextmenu:blur', {data: rootMenuData, originalEvent: e});\n                    rootMenuData.$selected = $parent;\n                    return;\n                }\n                break;\n\n            case 39: // right\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\n                    break;\n                }\n\n                const itemdata = rootMenuData.$selected.data('contextMenu') || {};\n                if (itemdata.$menu && rootMenuData.$selected.hasClass('context-menu-submenu')) {\n                    rootMenuData.$selected = null;\n                    itemdata.$selected = null;\n                    itemdata.$menu.trigger('nextcommand', {data: itemdata, originalEvent: e});\n                    return;\n                }\n                break;\n\n            case 35: // end\n            case 36: // home\n                if (rootMenuData.$selected && rootMenuData.$selected.find('input, textarea, select').length) {\n                    break;\n                } else {\n                    ((rootMenuData.$selected && rootMenuData.$selected.parent()) || rootMenuData.$menu)\n                        .children(':not(.' + rootMenuData.classNames.disabled + ', .' + rootMenuData.classNames.notSelectable + ')')[e.keyCode === 36 ? 'first' : 'last']()\n                        .trigger('contextmenu:focus', {data: rootMenuData, originalEvent: e});\n                    e.preventDefault();\n                    break;\n                }\n            case 13: // enter\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput) {\n                    if (rootMenuData.$selected && !rootMenuData.$selected.is('textarea, select')) {\n                        e.preventDefault();\n                        return;\n                    }\n                    break;\n                }\n                if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n                    rootMenuData.$selected.trigger('mouseup', {data: rootMenuData, originalEvent: e});\n                }\n                return;\n            case 32: // space\n            case 33: // page up\n            case 34: // page down\n                // prevent browser from scrolling down while menu is visible\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                return;\n\n            case 27: // esc\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                    rootMenuData.$menu.trigger('contextmenu:hide', {data: rootMenuData, originalEvent: e});\n                }\n                return;\n\n            default: // 0-9, a-z\n                const k = (String.fromCharCode(e.keyCode)).toUpperCase();\n                if (rootMenuData.accesskeys && rootMenuData.accesskeys[k]) {\n                    // according to the specs accesskeys must be invoked immediately\n                    rootMenuData.accesskeys[k].$node.trigger(rootMenuData.accesskeys[k].$menu ? 'contextmenu:focus' : 'mouseup', {\n                        data: rootMenuData,\n                        originalEvent: e\n                    });\n                    return;\n                }\n                break;\n        }\n        // pass event to selected item,\n        // stop propagation to avoid endless recursion\n        e.stopPropagation();\n        if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n            rootMenuData.$selected.trigger(e);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    prevItem(e) {\n        e.stopPropagation();\n        let currentMenuData = $(this).data('contextMenu') || {};\n        const rootMenuData = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (currentMenuData.$selected) {\n            const $s = currentMenuData.$selected;\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\n            currentMenuData.$selected = $s;\n        }\n\n        const $children = currentMenuData.$menu.children();\n        let $prev = !currentMenuData.$selected || !currentMenuData.$selected.prev().length ? $children.last() : currentMenuData.$selected.prev();\n        const $round = $prev;\n\n        // skip disabled or hidden elements\n        while ($prev.hasClass(rootMenuData.classNames.disabled) || $prev.hasClass(rootMenuData.classNames.notSelectable) || $prev.is(':hidden')) {\n            if ($prev.prev().length) {\n                $prev = $prev.prev();\n            } else {\n                $prev = $children.last();\n            }\n\n            if ($prev.is($round)) {\n                // break endless loop\n                return;\n            }\n        }\n\n        // leave current\n        if (currentMenuData.$selected) {\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\n        }\n\n        // activate next\n        rootMenuData.manager.handler.itemMouseenter.call($prev.get(0), e);\n\n        // focus input\n        const $input = $prev.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    nextItem(e) {\n        e.stopPropagation();\n        let currentMenuData = $(this).data('contextMenu') || {};\n        let rootMenuData = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (currentMenuData.$selected) {\n            const $s = currentMenuData.$selected;\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\n            currentMenuData.$selected = $s;\n        }\n\n        const $children = currentMenuData.$menu.children();\n        let $next = !currentMenuData.$selected || !currentMenuData.$selected.next().length ? $children.first() : currentMenuData.$selected.next();\n        const $round = $next;\n\n        // skip disabled\n        while ($next.hasClass(rootMenuData.classNames.disabled) || $next.hasClass(rootMenuData.classNames.notSelectable) || $next.is(':hidden')) {\n            if ($next.next().length) {\n                $next = $next.next();\n            } else {\n                $next = $children.first();\n            }\n            if ($next.is($round)) {\n                // break endless loop\n                return;\n            }\n        }\n\n        // leave current\n        if (currentMenuData.$selected) {\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\n        }\n\n        // activate next\n        rootMenuData.manager.handler.itemMouseenter.call($next.get(0), e);\n\n        // focus input\n        const $input = $next.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    focusInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.$selected = currentMenuData.$selected = $this;\n        rootMenuData.isInput = currentMenuData.isInput = true;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    blurInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.isInput = currentMenuData.isInput = false;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    menuMouseenter(e) {\n        let root = $(this).data().contextMenuRoot;\n        root.hovering = true;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    menuMouseleave(e) {\n        let root = $(this).data().contextMenuRoot;\n        if (root.$layer && root.$layer.is(e.relatedTarget)) {\n            root.hovering = false;\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    itemMouseenter(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.hovering = true;\n\n        // abort if we're re-entering\n        if (e && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // make sure only one item is selected\n        let targetMenu = (currentMenuData.$menu ? currentMenuData : rootMenuData);\n        targetMenu.$menu\n            .children('.' + rootMenuData.classNames.hover).trigger('contextmenu:blur', {\n                data: targetMenu,\n                originalEvent: e\n            })\n            .children('.hover').trigger('contextmenu:blur', {data: targetMenu, originalEvent: e});\n\n        if ($this.hasClass(rootMenuData.classNames.disabled) || $this.hasClass(rootMenuData.classNames.notSelectable)) {\n            currentMenuData.$selected = null;\n            return;\n        }\n\n        $this.trigger('contextmenu:focus', {data: currentMenuData, originalEvent: e});\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    itemMouseleave(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        if (rootMenuData !== currentMenuData && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\n            if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n                rootMenuData.$selected.trigger('contextmenu:blur', {data: rootMenuData, originalEvent: e});\n            }\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            rootMenuData.$selected = currentMenuData.$selected = currentMenuData.$node;\n            return;\n        }\n\n        if (currentMenuData && currentMenuData.$menu && currentMenuData.$menu.hasClass(rootMenuData.classNames.visible)) {\n            return;\n        }\n\n        $this.trigger('contextmenu:blur');\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    itemClick(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n        let key = data.contextMenuKey;\n        let callback;\n\n        // abort if the key is unknown or disabled or is a menu\n        if (!currentMenuData.items[key] || $this.is('.' + rootMenuData.classNames.disabled + ', .context-menu-separator, .' + rootMenuData.classNames.notSelectable) || ($this.is('.context-menu-submenu') && rootMenuData.selectableSubMenu === false)) {\n            return;\n        }\n\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        if (typeof currentMenuData.callbacks[key] === 'function' && Object.prototype.hasOwnProperty.call(currentMenuData.callbacks, key)) {\n            // item-specific callback\n            callback = currentMenuData.callbacks[key];\n        } else if (typeof rootMenuData.callback === 'function') {\n            // default callback\n            callback = rootMenuData.callback;\n        } else {\n            // no callback, no action\n            return;\n        }\n\n        // hide menu if callback doesn't stop that\n        if (callback.call(rootMenuData.$trigger, e, key, currentMenuData, rootMenuData) !== false) {\n            rootMenuData.$menu.trigger('contextmenu:hide');\n        } else if (rootMenuData.$menu.parent().length) {\n            rootMenuData.manager.operations.update.call(rootMenuData.$trigger, e, rootMenuData);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    inputClick(e) {\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {Object} data\n     */\n    hideMenu(e, data) {\n        const root = $(this).data('contextMenuRoot');\n        root.manager.operations.hide.call(root.$trigger, e, root, data && data.force);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    focusItem(e) {\n        e.stopPropagation();\n        const $this = $(this);\n        const data = $this.data();\n        const currentMenuData = data.contextMenu;\n        const rootMenuData = data.contextMenuRoot;\n\n        if ($this.hasClass(rootMenuData.classNames.disabled) || $this.hasClass(rootMenuData.classNames.notSelectable)) {\n            return;\n        }\n\n        $this\n            .addClass([rootMenuData.classNames.hover, rootMenuData.classNames.visible].join(' '))\n            // select other items and included items\n            .parent().find('.context-menu-item').not($this)\n            .removeClass(rootMenuData.classNames.visible)\n            .filter('.' + rootMenuData.classNames.hover)\n            .trigger('contextmenu:blur');\n\n        // remember selected\n        currentMenuData.$selected = rootMenuData.$selected = $this;\n\n        if (currentMenuData.$node && currentMenuData.$node.hasClass('context-menu-submenu')) {\n            currentMenuData.$node.addClass(rootMenuData.classNames.hover);\n        }\n\n        // position sub-menu - do after show so dumb $.ui.position can keep up\n        if (currentMenuData.$node) {\n            rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    blurItem(e) {\n        e.stopPropagation();\n        const $this = $(this);\n        const data = $this.data();\n        const currentMenuData = data.contextMenu;\n        const rootMenuData = data.contextMenuRoot;\n\n        if (rootMenuData.autoHide) { // for tablets and touch screens this needs to remain\n            $this.removeClass(rootMenuData.classNames.visible);\n        }\n        $this.removeClass(rootMenuData.classNames.hover);\n        currentMenuData.$selected = null;\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/classes/ContextMenuEventHandler.js","/**\n * The jQuery plugin namespace.\n * @external \"jQuery.fn\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * Function that is called when calling contextmenu on an element (eg. $('.contextmenu').contextMenu()).\n *\n * @instance\n * @function external:jQuery.fn.contextmenu\n *\n * @param {(string|Object)} operation\n * @returns {JQuery}\n */\nexport default function (operation) {\n    const $t = this;\n    const $o = operation;\n    if ($t.length > 0) { // this is not a build on demand menu\n        if (typeof operation === 'undefined') {\n            $t.first().trigger('contextmenu');\n        } else if (typeof operation.x !== 'undefined' && typeof operation.y !== 'undefined') {\n            $t.first().trigger($.Event('contextmenu', {\n                pageX: operation.x,\n                pageY: operation.y,\n                mouseButton: operation.button\n            }));\n        } else if (operation === 'hide') {\n            const $menu = this.first().data('contextMenu') ? this.first().data('contextMenu').$menu : null;\n            if ($menu) {\n                $menu.trigger('contextmenu:hide');\n            }\n        } else if (operation === 'destroy') {\n            $.contextMenu('destroy', {context: this});\n        } else if (operation === 'update') {\n            $.contextMenu('update', {context: this});\n        } else if ($.isPlainObject(operation)) {\n            operation.context = this;\n            $.contextMenu('create', operation);\n        } else if (operation === true) {\n            $t.removeClass('context-menu-disabled');\n        } else if (operation === false) {\n            $t.addClass('context-menu-disabled');\n        }\n    } else {\n        // eslint-disable-next-line no-undef\n        $.each($.contextMenu.menus, function () {\n            if (this.selector === $t.selector) {\n                $o.data = this;\n\n                $.extend($o.data, {trigger: 'demand'});\n            }\n        });\n\n        $.contextMenu.handle.contextmenu.call($o.target, $o);\n    }\n\n    return this;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/jquery/contextMenuFunction.js"],"sourceRoot":""}